import CustomSelect from "./CustomSelect";import React, {useEffect, useState} from 'react';import {components} from "react-select";import {useRouter} from "next/router";import Head from "next/head";import {Button, IconImg, InputGroup, SearchInput} from "./ControlsElements";import {FormattedMessage, useIntl} from "react-intl";const DropdownIndicator = props => {    return (        <components.DropdownIndicator {...props}>            <IconImg src='/down.svg' alt='down'/>        </components.DropdownIndicator>    );};const Controls = ({onSearch, products}) => {    const {query} = useRouter();    const intl = useIntl();    const [category, setCategory] = useState([]);    const [searchPrice, setSearchPrice] = useState('');    const [defaultVal, setDefVal] = useState([]);    const options = [];    useEffect(() => {        let allCategories = [];        products.map(item => {            if (!allCategories.includes(item.category)) {                allCategories.push(item.category)            }        });        setCategory(allCategories);    }, [products]);    category.map(item => {        options.push({value: item, label: item})    })    useEffect(() => {        if (query.category) {            setDefVal({value: query.category, label: query.category})        }        setSearchPrice(query.amount);    }, [query.amount, query.category])    let searchVal = defaultVal?.value || ''    const searchParams = {        amount: searchPrice,        category: searchVal    }    return (        <>            <Head>                {searchVal === 'КБТ' && <>                    <title>{intl.formatMessage({ id: 'headerTitleBig'})}</title>                    <meta                        name="description"                        content={intl.formatMessage({                            id: 'headerDescriptionBig',                            description: 'headerDescriptionBig',                            defaultMessage: 'headerDescriptionBig'                        })}                    />                </>                }                {searchVal === 'МБТ' && <>                    <title>{intl.formatMessage({ id: 'headerTitleSmall'})}</title>                    <meta                        name="description"                        content={intl.formatMessage({                            id: 'headerDescriptionSmall',                            description: 'headerDescriptionSmall',                            defaultMessage: 'headerDescriptionSmall'                        })}                    />                </>                }                {!!searchVal === false && <>                    <title>{intl.formatMessage({ id: 'headerTitle'})}</title>                    <meta                        name="description"                        content={intl.formatMessage({                            id: 'headerDescription',                            description: 'headerDescription',                            defaultMessage: 'headerDescription'                        })}                    />                </>                }            </Head>                <InputGroup>                    <SearchInput                        type='number'                        name='amount'                        value={searchPrice}                        onChange={(e) => setSearchPrice(e.target.value)}                    />                    {                        <CustomSelect                            name="category"                            text={intl.formatMessage({                                id: 'category'                            })}                            value={defaultVal}                            id='customSelect'                            instanceId='customSelect'                            placeholder={intl.formatMessage({                                id: 'category'                            })}                            isClearable={true}                            options={options}                            components={{IndicatorSeparator: () => null, DropdownIndicator}}                            onChange={setDefVal}                        />                    }                    <Button                         onClick={() => onSearch(searchParams)}                    ><FormattedMessage                        id='buttonCheck'/></Button>                </InputGroup>        </>    );};export default Controls;