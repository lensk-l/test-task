import CustomSelect from "./CustomSelect";import React, {useEffect, useState} from 'react';import {components} from "react-select";import {useRouter} from "next/router";import Head from "next/head";import {Button, IconImg, InputGroup, SearchInput} from "./ControlsElements";import {FormattedMessage, useIntl} from "react-intl";const DropdownIndicator = props => {    return (        <components.DropdownIndicator {...props}>            <IconImg src='/down.svg' alt='down'/>        </components.DropdownIndicator>    );};const Controls = ({onSearch, products}) => {    const [category, setCategory] = useState([]);    const [searchPrice, setSearchPrice] = useState('');    const [defaultVal, setDefVal] = useState([])    const options = [];    let {query} = useRouter();    useEffect(() => {        let allCategories = [];        products.map(item => {            if (!allCategories.includes(item.category)) {                allCategories.push(item.category)            }        });        setCategory(allCategories);    }, [products]);    category.map(item => {        options.push({value: item, label: item})    })    useEffect(() => {            if (query.category) {                setDefVal({value: query.category, label: query.category})            }            setSearchPrice(query.amount);    }, [query.amount, query.category])    let searchVal = defaultVal?.value || ''    const intl = useIntl();    return (        <>            <Head>                {searchVal === 'КБТ' && <>                    <title><FormattedMessage id='headerTitleBig'/></title>                    <meta                        name="description"                        content={intl.formatMessage({                            id:'headerDescriptionBig'                        })}                    />                </>                }                {searchVal === 'МБТ' && <>                    <title><FormattedMessage id='headerTitleSmall'/></title>                    <meta                        name="description"                        content={intl.formatMessage({                            id:'headerDescriptionSmall'                        })}                    />                </>                }                {!!searchVal === false && <>                    <title><FormattedMessage id='headerTitle'/></title>                    <meta                        name="description"                        content={intl.formatMessage({                            id:'headerDescription'                        })}                    />                </>                }            </Head>            <InputGroup>                <SearchInput type='number'                             name='price'                             value={searchPrice}                             onChange={(e) => setSearchPrice(e.target.value)}                />                {                    <CustomSelect                        text={intl.formatMessage({                            id:'category'                        })}                        value={defaultVal}                        id='customSelect'                        instanceId='customSelect'                        placeholder={intl.formatMessage({                            id:'category'                        })}                        isClearable={true}                        options={options}                        components={{IndicatorSeparator: () => null, DropdownIndicator}}                        onChange={setDefVal}                    />                }                <Button onClick={() => onSearch(searchPrice, searchVal)}><FormattedMessage id='buttonCheck'/></Button>            </InputGroup>        </>    );};export default Controls;