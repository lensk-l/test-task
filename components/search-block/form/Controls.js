import CustomSelect from "./CustomSelect";import React, {useEffect, useState} from 'react';import styled from "styled-components";import {components} from "react-select";import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';import {faCaretDown} from "@fortawesome/free-solid-svg-icons";import {useSelector} from "react-redux";const InputGroup = styled.div`  display: flex;  flex-direction: row;  justify-content: space-around;  padding: 0 92px 0;  margin-top: 24px;  margin-bottom: 36px;`;const SearchInput = styled.input.attrs({    type: 'search',    placeholder: 'Сумма до, грн',})`  width: 253px;  height: 48px;  font-family: var(--font-Noto-sans);  font-weight: 400;  font-size: 16px;  line-height: 28px;  border: var(--border);  color: var(--light-gray);  border-radius: var(--radii);  padding-left: 12px;  margin-right: 8px;`;const Button = styled.button`  width: 253px;  height: 48px;  background-color: var(--secondaty-green);  color: white;  letter-spacing: 0.1em;  text-transform: uppercase;  font-feature-settings: 'pnum' on, 'lnum' on;  border: none;  border-radius: var(--radii);  margin-left: 16px;`;const DropdownIndicator = props => {    return (        <components.DropdownIndicator {...props}>            <FontAwesomeIcon icon={faCaretDown}/>        </components.DropdownIndicator>    );};const Controls = ({onSearch}) => {    const [searchPrice, setSearchPrice] = useState('');    const [category, setCategory] = useState([]);    const [categoryValue, setCategoryValue] = useState('')    const products = useSelector((state) => state.productSlice.productsAll);    const options = [];    useEffect(() => {        let allCategories = [];        products.map(item => {            if (!allCategories.includes(item.category)) {                allCategories.push(item.category)            }        });        setCategory(allCategories);    }, [])    category.map(item => {        options.push({value: item, label: item})    })    const catForSearch = categoryValue?.value || '';    return (        <InputGroup>            <SearchInput type='number' name='price' onChange={(e) => setSearchPrice(e.target.value)}                         value={searchPrice}/>            <CustomSelect                placeholder='Категория'                options={options}                isClearable                isSearchable={false}                components={{IndicatorSeparator: () => null, DropdownIndicator}}                value={categoryValue}                onChange={setCategoryValue}            />            <Button onClick={() => onSearch(searchPrice, catForSearch)}>Подобрать</Button>        </InputGroup>    );};export default Controls;