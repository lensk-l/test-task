import SearchBlock from "../components/search-block/SearchBlock";import ProductsList from "../components/products-list/ProductsList";import {useState} from "react";import {useRouter} from "next/router";const Index = ({products}) => {    const [filteredProducts, setFilteredProducts] = useState(products);    let router = useRouter();    const handleSearch = (price, category) => {        let filteredData = [...products];        const query = {}        if (Number(price)) {            filteredData = filteredData.filter(product => (                product.amount <= price            ));            query['amount'] = price        }        if (category) {            filteredData = filteredData.filter(product => (                product.category === category            ));            query['category'] = category        }        router.push({                pathname: '/',                query: query            },            undefined, {shallow: true}        )        setFilteredProducts(filteredData);    }    const querySearch = (queryPrice, queryCategory) => {        let filteredData = [...products];        if (Number(queryPrice)) {            filteredData = filteredData.filter(product => (                product.amount <= queryPrice            ));        }        if (queryCategory) {            filteredData = filteredData.filter(product => (                product.category === queryCategory            ));        }        setFilteredProducts(filteredData);    }    return (        <>            <SearchBlock onSearch={handleSearch} querySearch={querySearch}/>            <ProductsList products={filteredProducts}/>        </>    );}export default Index;export const getStaticProps = async () => {    const baseUrl =        process.env.NODE_ENV === 'production' ? 'https://test-treeum.herokuapp.com' : 'http://localhost:3000'    let products = []    try {        const response = await fetch(`${baseUrl}/api/products`)        products = await response.json();    } catch (e) {        console.log(e.toString())    }    return {        props: {products}    }}