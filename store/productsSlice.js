import {createAsyncThunk, createSlice} from "@reduxjs/toolkit";const baseUrl =  process.env.NODE_ENV === 'production' ? 'https://test-treeum.herokuapp.com' : 'http://localhost:3000'export const fetchAllProducts = createAsyncThunk(    'products/fetchProducts',    async (locale) => {        const response = await fetch(`${baseUrl}/api/products`, {            credentials: 'include',            headers: {                'Content-Type': 'application/json',                'locale': locale            }        })        return await response.json();    });export const fetchFilteredProducts = createAsyncThunk(    'products/fetchFilteredProducts',    async (query) => {        const response = await fetch(`${baseUrl}/api/products${query}`, {        });        return await response.json();    });const productSlice = createSlice({    name: 'products',    initialState: {        productsAll: [],        status: null,    },    reducers: {},    extraReducers: (builder) => {        builder            .addCase(fetchAllProducts.pending, (state) => {                state.status = 'loading'            })            .addCase(fetchAllProducts.fulfilled, (state, action) => {                state.status = 'idle'                state.productsAll = action.payload            })            .addCase(fetchFilteredProducts.pending, (state) => {                state.status = 'loading'            })            .addCase(fetchFilteredProducts.fulfilled, (state, action) => {                state.status = 'idle'                state.productsAll = action.payload            })    },})export default productSlice.reducer;