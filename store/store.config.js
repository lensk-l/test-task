import {configureStore} from '@reduxjs/toolkit'import {createWrapper} from 'next-redux-wrapper'import {productsApi} from "./products/products.api";export const makeStore = () => configureStore({    reducer: {        [productsApi.reducerPath]: productsApi.reducer    },    middleware: (gDM) => gDM().concat(productsApi.middleware),})export const wrapper = createWrapper(makeStore, {debug: true});// const combinedReducer  = combineReducers({//     products: productSlice,// });//// const reducer = (state, action) => {//     if (action.type === HYDRATE) {//         const nextState = {//             ...state,//             ...action.payload,//         };//         return nextState;//     } else {//         return combinedReducer(state, action);//     }// }// export const makeStore = () =>//     configureStore({//         reducer//     });//// export const wrapper = createWrapper(makeStore, {debug: true});